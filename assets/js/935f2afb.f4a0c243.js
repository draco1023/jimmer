"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Introduction to Jimmer","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Project Introduction","href":"/jimmer/docs/overview/introduction","docId":"overview/introduction"},{"type":"link","label":"Different Entities","href":"/jimmer/docs/overview/entity","docId":"overview/entity"},{"type":"link","label":"Example(Fastest learning way)","href":"/jimmer/docs/overview/standard-demo","docId":"overview/standard-demo"},{"type":"category","label":"Get Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create a Project","href":"/jimmer/docs/overview/get-started/create-project","docId":"overview/get-started/create-project"},{"type":"link","label":"Create Database","href":"/jimmer/docs/overview/get-started/create-database","docId":"overview/get-started/create-database"},{"type":"link","label":"Define Entities","href":"/jimmer/docs/overview/get-started/define-entity","docId":"overview/get-started/define-entity"},{"type":"link","label":"Generate Code","href":"/jimmer/docs/overview/get-started/generate-code","docId":"overview/get-started/generate-code"},{"type":"link","label":"Final Usage","href":"/jimmer/docs/overview/get-started/usage","docId":"overview/get-started/usage"}],"href":"/jimmer/docs/overview/get-started/"},{"type":"link","label":"Benchmark Report","href":"/jimmer/docs/overview/benchmark","docId":"overview/benchmark"}],"href":"/jimmer/docs/overview/"},{"type":"category","label":"Mapping","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Base mapping","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Nullity","href":"/jimmer/docs/mapping/base/nullity","docId":"mapping/base/nullity"},{"type":"link","label":"Simple Mapping","href":"/jimmer/docs/mapping/base/basic","docId":"mapping/base/basic"},{"type":"category","label":"Association Mapping","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"One To One","href":"/jimmer/docs/mapping/base/association/one-to-one","docId":"mapping/base/association/one-to-one"},{"type":"link","label":"Many To One","href":"/jimmer/docs/mapping/base/association/many-to-one","docId":"mapping/base/association/many-to-one"},{"type":"link","label":"One To Many","href":"/jimmer/docs/mapping/base/association/one-to-many","docId":"mapping/base/association/one-to-many"},{"type":"link","label":"Many To Many","href":"/jimmer/docs/mapping/base/association/many-to-many","docId":"mapping/base/association/many-to-many"}],"href":"/jimmer/docs/mapping/base/association/"},{"type":"link","label":"Naming Strategy","href":"/jimmer/docs/mapping/base/naming-strategy","docId":"mapping/base/naming-strategy"},{"type":"link","label":"Real and Fake Foreign Keys","href":"/jimmer/docs/mapping/base/foreignkey","docId":"mapping/base/foreignkey"}],"href":"/jimmer/docs/mapping/base/"},{"type":"category","label":"Advanced mapping","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Embedded Properties","href":"/jimmer/docs/mapping/advanced/embedded","docId":"mapping/advanced/embedded"},{"type":"link","label":"MappedSuperclass","href":"/jimmer/docs/mapping/advanced/mapped-super-class","docId":"mapping/advanced/mapped-super-class"},{"type":"link","label":"Logical Deletion","href":"/jimmer/docs/mapping/advanced/logical-deleted","docId":"mapping/advanced/logical-deleted"},{"type":"category","label":"View Properites","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"IdView","href":"/jimmer/docs/mapping/advanced/view/id-view","docId":"mapping/advanced/view/id-view"},{"type":"link","label":"ManyToManyView","href":"/jimmer/docs/mapping/advanced/view/many-to-many-view","docId":"mapping/advanced/view/many-to-many-view"}],"href":"/jimmer/docs/mapping/advanced/view/"},{"type":"category","label":"Calculated Properties","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Formula","href":"/jimmer/docs/mapping/advanced/calculated/formula","docId":"mapping/advanced/calculated/formula"},{"type":"link","label":"Complex Calculation","href":"/jimmer/docs/mapping/advanced/calculated/transient","docId":"mapping/advanced/calculated/transient"}],"href":"/jimmer/docs/mapping/advanced/calculated/"},{"type":"link","label":"Enum Mapping","href":"/jimmer/docs/mapping/advanced/enum","docId":"mapping/advanced/enum"},{"type":"link","label":"JSON Mapping","href":"/jimmer/docs/mapping/advanced/json","docId":"mapping/advanced/json"},{"type":"link","label":"Non-Structural Mapping","href":"/jimmer/docs/mapping/advanced/join-sql","docId":"mapping/advanced/join-sql"},{"type":"link","label":"Remote Association","href":"/jimmer/docs/mapping/advanced/remote","docId":"mapping/advanced/remote"},{"type":"link","label":"Key","href":"/jimmer/docs/mapping/advanced/key","docId":"mapping/advanced/key"},{"type":"link","label":"OnDissociate","href":"/jimmer/docs/mapping/advanced/on-dissociate","docId":"mapping/advanced/on-dissociate"}],"href":"/jimmer/docs/mapping/advanced/"}],"href":"/jimmer/docs/mapping/"},{"type":"category","label":"Query","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Overview","href":"/jimmer/docs/query/usage","docId":"query/usage"},{"type":"category","label":"Object Fetcher","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic Usage","href":"/jimmer/docs/query/object-fetcher/usage","docId":"query/object-fetcher/usage"},{"type":"link","label":"Ordinary Properties","href":"/jimmer/docs/query/object-fetcher/props","docId":"query/object-fetcher/props"},{"type":"link","label":"Associations","href":"/jimmer/docs/query/object-fetcher/association","docId":"query/object-fetcher/association"},{"type":"link","label":"Recursive Query","href":"/jimmer/docs/query/object-fetcher/recursive","docId":"query/object-fetcher/recursive"},{"type":"link","label":"View Properties","href":"/jimmer/docs/query/object-fetcher/view","docId":"query/object-fetcher/view"},{"type":"link","label":"Querying DTOs","href":"/jimmer/docs/query/object-fetcher/dto","docId":"query/object-fetcher/dto"},{"type":"link","label":"Working with Spring Data","href":"/jimmer/docs/query/object-fetcher/spring-data","docId":"query/object-fetcher/spring-data"}],"href":"/jimmer/docs/query/object-fetcher/"},{"type":"link","label":"Dynamic Filtering","href":"/jimmer/docs/query/dynamic-where","docId":"query/dynamic-where"},{"type":"category","label":"Dynamic JOIN","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Problems with Other Solutions","href":"/jimmer/docs/query/dynamic-join/problem","docId":"query/dynamic-join/problem"},{"type":"link","label":"Association Path Chaining","href":"/jimmer/docs/query/dynamic-join/chain-style","docId":"query/dynamic-join/chain-style"},{"type":"link","label":"Merge Conflict Joins","href":"/jimmer/docs/query/dynamic-join/merge","docId":"query/dynamic-join/merge"},{"type":"link","label":"Optimize Unnecessary Joins","href":"/jimmer/docs/query/dynamic-join/optimization","docId":"query/dynamic-join/optimization"},{"type":"link","label":"Pagination Safety","href":"/jimmer/docs/query/dynamic-join/table-ex","docId":"query/dynamic-join/table-ex"},{"type":"link","label":"Weak Join","href":"/jimmer/docs/query/dynamic-join/weak-join","docId":"query/dynamic-join/weak-join"},{"type":"link","label":"Join Features Specific to Kotlin","href":"/jimmer/docs/query/dynamic-join/kotlin-join","docId":"query/dynamic-join/kotlin-join"}],"href":"/jimmer/docs/query/dynamic-join/"},{"type":"link","label":"Dynamic Ordering","href":"/jimmer/docs/query/dynamic-order","docId":"query/dynamic-order"},{"type":"link","label":"Aggregate & Group","href":"/jimmer/docs/query/group","docId":"query/group"},{"type":"category","label":"Smart Paging","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Usage","href":"/jimmer/docs/query/paging/usage","docId":"query/paging/usage"},{"type":"link","label":"Table Join Optimization","href":"/jimmer/docs/query/paging/unncessary-join","docId":"query/paging/unncessary-join"},{"type":"link","label":"Reverse Sorting Optimization","href":"/jimmer/docs/query/paging/reverse-sorting","docId":"query/paging/reverse-sorting"},{"type":"link","label":"Deep Pagination Optimization","href":"/jimmer/docs/query/paging/deep-optimization","docId":"query/paging/deep-optimization"}],"href":"/jimmer/docs/query/paging/"},{"type":"link","label":"DSL Expressions","href":"/jimmer/docs/query/expression","docId":"query/expression"},{"type":"link","label":"Native SQL Expressions","href":"/jimmer/docs/query/native-sql","docId":"query/native-sql"},{"type":"link","label":"Subqueries","href":"/jimmer/docs/query/sub-query","docId":"query/sub-query"},{"type":"category","label":"Global Filters","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Custom Filters","href":"/jimmer/docs/query/global-filter/user-filter","docId":"query/global-filter/user-filter"},{"type":"link","label":"Logical Deletion","href":"/jimmer/docs/query/global-filter/logical-deleted","docId":"query/global-filter/logical-deleted"},{"type":"link","label":"Multi-View Cache","href":"/jimmer/docs/query/global-filter/multiview-cache","docId":"query/global-filter/multiview-cache"}],"href":"/jimmer/docs/query/global-filter/"},{"type":"link","label":"Querying Association Tables","href":"/jimmer/docs/query/associations","docId":"query/associations"},{"type":"link","label":"Query By Example","href":"/jimmer/docs/query/qbe","docId":"query/qbe"}],"href":"/jimmer/docs/query/"},{"type":"category","label":"Mutation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Update Statement","href":"/jimmer/docs/mutation/update-statement","docId":"mutation/update-statement"},{"type":"link","label":"Delete Statement","href":"/jimmer/docs/mutation/delete-statement","docId":"mutation/delete-statement"},{"type":"category","label":"Save Command","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic Usage","href":"/jimmer/docs/mutation/save-command/usage","docId":"mutation/save-command/usage"},{"type":"link","label":"Save Mode","href":"/jimmer/docs/mutation/save-command/save-mode","docId":"mutation/save-command/save-mode"},{"type":"link","label":"Incomplete Object","href":"/jimmer/docs/mutation/save-command/incomplete","docId":"mutation/save-command/incomplete"},{"type":"link","label":"Save Associations","href":"/jimmer/docs/mutation/save-command/association","docId":"mutation/save-command/association"},{"type":"link","label":"Dissociation Operations","href":"/jimmer/docs/mutation/save-command/dissociation","docId":"mutation/save-command/dissociation"},{"type":"link","label":"Associated Id Checking","href":"/jimmer/docs/mutation/save-command/id-checking","docId":"mutation/save-command/id-checking"},{"type":"link","label":"Optimistic/Pessimistic Lock","href":"/jimmer/docs/mutation/save-command/lock","docId":"mutation/save-command/lock"},{"type":"link","label":"Other Features","href":"/jimmer/docs/mutation/save-command/other","docId":"mutation/save-command/other"},{"type":"category","label":"Input DTO","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Problem","href":"/jimmer/docs/mutation/save-command/input-dto/problem","docId":"mutation/save-command/input-dto/problem"},{"type":"link","label":"Lonely Form","href":"/jimmer/docs/mutation/save-command/input-dto/lonely","docId":"mutation/save-command/input-dto/lonely"},{"type":"link","label":"Using DTO Language","href":"/jimmer/docs/mutation/save-command/input-dto/dto-lang","docId":"mutation/save-command/input-dto/dto-lang"},{"type":"link","label":"Using MapStruct","href":"/jimmer/docs/mutation/save-command/input-dto/mapstruct","docId":"mutation/save-command/input-dto/mapstruct"}],"href":"/jimmer/docs/mutation/save-command/input-dto/"}],"href":"/jimmer/docs/mutation/save-command/"},{"type":"link","label":"Delete Command","href":"/jimmer/docs/mutation/delete-command","docId":"mutation/delete-command"},{"type":"link","label":"Mutable Association Table","href":"/jimmer/docs/mutation/associations","docId":"mutation/associations"},{"type":"link","label":"Interceptor","href":"/jimmer/docs/mutation/draft-interceptor","docId":"mutation/draft-interceptor"},{"type":"link","label":"Trigger","href":"/jimmer/docs/mutation/trigger","docId":"mutation/trigger"}],"href":"/jimmer/docs/mutation/"},{"type":"category","label":"Cache","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Enable Cache","href":"/jimmer/docs/cache/enable-cache","docId":"cache/enable-cache"},{"type":"category","label":"Cache type","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Object Cache","href":"/jimmer/docs/cache/cache-type/object","docId":"cache/cache-type/object"},{"type":"link","label":"Association Cache","href":"/jimmer/docs/cache/cache-type/association","docId":"cache/cache-type/association"},{"type":"link","label":"Calculated Cache","href":"/jimmer/docs/cache/cache-type/calculation","docId":"cache/cache-type/calculation"}],"href":"/jimmer/docs/cache/cache-type/"},{"type":"link","label":"Cache Consistency","href":"/jimmer/docs/cache/consistency","docId":"cache/consistency"},{"type":"category","label":"Multi-view Cache","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic Concepts","href":"/jimmer/docs/cache/multiview-cache/concept","docId":"cache/multiview-cache/concept"},{"type":"link","label":"User Defined Cacheable Filters","href":"/jimmer/docs/cache/multiview-cache/user-filter","docId":"cache/multiview-cache/user-filter"},{"type":"link","label":"Built-in Filters","href":"/jimmer/docs/cache/multiview-cache/builtin-filter","docId":"cache/multiview-cache/builtin-filter"},{"type":"link","label":"Cache Abandoned Reason","href":"/jimmer/docs/cache/multiview-cache/abandoned-callback","docId":"cache/multiview-cache/abandoned-callback"}],"href":"/jimmer/docs/cache/multiview-cache/"}],"href":"/jimmer/docs/cache/"},{"type":"category","label":"Spring","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Spring Transaction","href":"/jimmer/docs/spring/transaction","docId":"spring/transaction"},{"type":"category","label":"Spring Data","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Define Repository","href":"/jimmer/docs/spring/repository/concept","docId":"spring/repository/concept"},{"type":"link","label":"Simple Queries","href":"/jimmer/docs/spring/repository/abstract","docId":"spring/repository/abstract"},{"type":"link","label":"Complex Queries","href":"/jimmer/docs/spring/repository/default","docId":"spring/repository/default"},{"type":"link","label":"Query DTO","href":"/jimmer/docs/spring/repository/dto","docId":"spring/repository/dto"}],"href":"/jimmer/docs/spring/repository/"},{"type":"category","label":"Generate Client Code","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Generate Client API","href":"/jimmer/docs/spring/client/api","docId":"spring/client/api"},{"type":"link","label":"Generate Client Errors","href":"/jimmer/docs/spring/client/error","docId":"spring/client/error"}],"href":"/jimmer/docs/spring/client/"},{"type":"link","label":"Remote Associations","href":"/jimmer/docs/spring/spring-cloud","docId":"spring/spring-cloud"},{"type":"link","label":"Appendix","href":"/jimmer/docs/spring/appendix","docId":"spring/appendix"}],"href":"/jimmer/docs/spring/"},{"type":"category","label":"Configuration","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Dialect","href":"/jimmer/docs/configuration/dialect","docId":"configuration/dialect"},{"type":"link","label":"Connection Manager","href":"/jimmer/docs/configuration/connection-manager","docId":"configuration/connection-manager"},{"type":"link","label":"Batch Control","href":"/jimmer/docs/configuration/batch-size","docId":"configuration/batch-size"},{"type":"link","label":"SQL Log","href":"/jimmer/docs/configuration/sql-log","docId":"configuration/sql-log"},{"type":"link","label":"Default Enum Strategy","href":"/jimmer/docs/configuration/default-enum-strategy","docId":"configuration/default-enum-strategy"},{"type":"link","label":"Default Naming Strategy","href":"/jimmer/docs/configuration/default-database-stragegy","docId":"configuration/default-database-stragegy"},{"type":"link","label":"Trigger Type","href":"/jimmer/docs/configuration/trigger-type","docId":"configuration/trigger-type"},{"type":"link","label":"Database Validation","href":"/jimmer/docs/configuration/database-validation","docId":"configuration/database-validation"},{"type":"link","label":"Microservice","href":"/jimmer/docs/configuration/micro-service","docId":"configuration/micro-service"},{"type":"link","label":"Scala Provider","href":"/jimmer/docs/configuration/scala-providder","docId":"configuration/scala-providder"},{"type":"link","label":"Cache Abandoned Reason","href":"/jimmer/docs/configuration/cache-abandoned","docId":"configuration/cache-abandoned"},{"type":"link","label":"Associated Id Checking","href":"/jimmer/docs/configuration/id-only-target-checking-level","docId":"configuration/id-only-target-checking-level"},{"type":"link","label":"Pessimistic Lock","href":"/jimmer/docs/configuration/save-command-pessimistic-lock","docId":"configuration/save-command-pessimistic-lock"}],"href":"/jimmer/docs/configuration/"},{"type":"category","label":"GraphQL","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basic Concepts","href":"/jimmer/docs/graphql/concept","docId":"graphql/concept"},{"type":"link","label":"Query","href":"/jimmer/docs/graphql/query","docId":"graphql/query"},{"type":"link","label":"Mutation","href":"/jimmer/docs/graphql/mutation","docId":"graphql/mutation"}],"href":"/jimmer/docs/graphql/"},{"type":"category","label":"Object","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Dynamicity","href":"/jimmer/docs/object/dynamic","docId":"object/dynamic"},{"type":"category","label":"Immutability","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Reason","href":"/jimmer/docs/object/immutable/reason","docId":"object/immutable/reason"},{"type":"link","label":"Current Situation","href":"/jimmer/docs/object/immutable/current-situation","docId":"object/immutable/current-situation"},{"type":"link","label":"Solution","href":"/jimmer/docs/object/immutable/solution","docId":"object/immutable/solution"}],"href":"/jimmer/docs/object/immutable/"},{"type":"link","label":"Draft","href":"/jimmer/docs/object/draft","docId":"object/draft"},{"type":"link","label":"Working with Jackson","href":"/jimmer/docs/object/jackson","docId":"object/jackson"},{"type":"category","label":"DTO conversion","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"DTO Language","href":"/jimmer/docs/object/view/dto-language","docId":"object/view/dto-language"},{"type":"link","label":"MapStruct","href":"/jimmer/docs/object/view/mapstruct","docId":"object/view/mapstruct"}],"href":"/jimmer/docs/object/view/"},{"type":"link","label":"Visibility","href":"/jimmer/docs/object/visibility","docId":"object/visibility"},{"type":"link","label":"Tool Methods","href":"/jimmer/docs/object/tool","docId":"object/tool"}],"href":"/jimmer/docs/object/"},{"type":"category","label":"Resources","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Voice of Successful Cases","href":"/jimmer/docs/resource/vice-of-sccuessed","docId":"resource/vice-of-sccuessed"},{"type":"link","label":"Ecosystem","href":"/jimmer/docs/resource/ecosystem","docId":"resource/ecosystem"},{"type":"link","label":"Vedio","href":"/jimmer/docs/resource/vedio","docId":"resource/vedio"},{"type":"link","label":"Discuss","href":"/jimmer/docs/resource/discuss","docId":"resource/discuss"}],"href":"/jimmer/docs/resource/"}]},"docs":{"cache/cache-type/association":{"id":"cache/cache-type/association","title":"Association Cache","description":"Association cache refers to mapping the current object id to the associated object id or collection.","sidebar":"tutorialSidebar"},"cache/cache-type/calculation":{"id":"cache/cache-type/calculation","title":"Calculated Cache","description":"Calculated cache refers to mapping the current object id to the calculated value of the user-defined complex calculated property.","sidebar":"tutorialSidebar"},"cache/cache-type/index":{"id":"cache/cache-type/index","title":"Cache type","description":"Here, we will introduce three types of cache","sidebar":"tutorialSidebar"},"cache/cache-type/object":{"id":"cache/cache-type/object","title":"Object Cache","description":"Object cache refers to mapping id to entity object. This is the simplest and most basic cache.","sidebar":"tutorialSidebar"},"cache/consistency":{"id":"cache/consistency","title":"Cache Consistency","description":"In previous articles on object cache, association cache, and calculated cache, we have discussed in detail how Jimmer automatically deletes affected caches when data is modified.","sidebar":"tutorialSidebar"},"cache/enable-cache":{"id":"cache/enable-cache","title":"Enable Cache","description":"CacheFactory Interface","sidebar":"tutorialSidebar"},"cache/index":{"id":"cache/index","title":"Cache","description":"Jimmer provides powerful cache support capabilities.","sidebar":"tutorialSidebar"},"cache/multiview-cache/abandoned-callback":{"id":"cache/multiview-cache/abandoned-callback","title":"Cache Abandoned Reason","description":"CacheAbandonedCallback","sidebar":"tutorialSidebar"},"cache/multiview-cache/builtin-filter":{"id":"cache/multiview-cache/builtin-filter","title":"Built-in Filters","description":"Define Logical Delete Flag","sidebar":"tutorialSidebar"},"cache/multiview-cache/concept":{"id":"cache/multiview-cache/concept","title":"Basic Concepts","description":"Concepts","sidebar":"tutorialSidebar"},"cache/multiview-cache/index":{"id":"cache/multiview-cache/index","title":"Multi-view Cache","description":"Features represented by permission systems allow different users to see different data. Therefore, Jimmer uses multi-view cache to allow different users to see different caches.","sidebar":"tutorialSidebar"},"cache/multiview-cache/user-filter":{"id":"cache/multiview-cache/user-filter","title":"User Defined Cacheable Filters","description":"Cache-friendly Filters","sidebar":"tutorialSidebar"},"configuration/batch-size":{"id":"configuration/batch-size","title":"Batch Control","description":"SqlClient supports two configurations: DefaultBatchSize and DefaultListBatchSize. If not configured, the default values are 128 and 16.","sidebar":"tutorialSidebar"},"configuration/cache-abandoned":{"id":"configuration/cache-abandoned","title":"Cache Abandoned Reason","description":"This configuration is explained in Cache Section/Multiview Cache/Cache Abandoned Reason.","sidebar":"tutorialSidebar"},"configuration/connection-manager":{"id":"configuration/connection-manager","title":"Connection Manager","description":"Concept","sidebar":"tutorialSidebar"},"configuration/database-validation":{"id":"configuration/database-validation","title":"Database Validation","description":"Function Introduction","sidebar":"tutorialSidebar"},"configuration/default-database-stragegy":{"id":"configuration/default-database-stragegy","title":"Default Naming Strategy","description":"This configuration is explained in Mapping Section/Base Mapping/Naming Strategy.","sidebar":"tutorialSidebar"},"configuration/default-enum-strategy":{"id":"configuration/default-enum-strategy","title":"Default Enum Strategy","description":"This configuration is explained in Mapping Section/Advanced Mapping/Enum Mapping/Don\'t explicitly use @EnumType.","sidebar":"tutorialSidebar"},"configuration/dialect":{"id":"configuration/dialect","title":"Dialect","description":"Different databases have vastly different SQL support, so Jimmer uses dialect configuration to adapt to different databases.","sidebar":"tutorialSidebar"},"configuration/id-only-target-checking-level":{"id":"configuration/id-only-target-checking-level","title":"Associated Id Checking","description":"This configuration is explained in Mutation Section/Save Command/Enum Mapping/Associated Id Checking.","sidebar":"tutorialSidebar"},"configuration/index":{"id":"configuration/index","title":"Configuration","description":"This section introduces the global configurations supported by Jimmer.","sidebar":"tutorialSidebar"},"configuration/micro-service":{"id":"configuration/micro-service","title":"Microservice","description":"This configuration is explained in Spring Section/SpringCloud and Remote Association/Enable Jimmer to Support Microservices.","sidebar":"tutorialSidebar"},"configuration/save-command-pessimistic-lock":{"id":"configuration/save-command-pessimistic-lock","title":"Pessimistic Lock","description":"This configuration is explained in Mutation Section/Save Command/Pessimistic Lock.","sidebar":"tutorialSidebar"},"configuration/scala-providder":{"id":"configuration/scala-providder","title":"Scala Provider","description":"Basic Concepts","sidebar":"tutorialSidebar"},"configuration/sql-log":{"id":"configuration/sql-log","title":"SQL Log","description":"For ORM, it is important to print generated SQL in logs.","sidebar":"tutorialSidebar"},"configuration/trigger-type":{"id":"configuration/trigger-type","title":"Trigger Type","description":"This configuration is explained in Mutation Section/Trigger/Set Trigger Type.","sidebar":"tutorialSidebar"},"graphql/concept":{"id":"graphql/concept","title":"Basic Concepts","description":"Concepts","sidebar":"tutorialSidebar"},"graphql/index":{"id":"graphql/index","title":"GraphQL","description":"This section introduces how to quickly create GraphQL services with Jimmer.","sidebar":"tutorialSidebar"},"graphql/mutation":{"id":"graphql/mutation","title":"Mutation","description":"Introduction to GraphQL Input","sidebar":"tutorialSidebar"},"graphql/query":{"id":"graphql/query","title":"Query","description":"Feature Description","sidebar":"tutorialSidebar"},"mapping/advanced/calculated/formula":{"id":"mapping/advanced/calculated/formula","title":"Formula","description":"Simple formula properties are properties declared with @org.babyfish.jimmer.sql.Formula. There are two usages:","sidebar":"tutorialSidebar"},"mapping/advanced/calculated/index":{"id":"mapping/advanced/calculated/index","title":"Calculated Properties","description":"In this article, you will learn about Jimmer\'s calculated properties and annotations:","sidebar":"tutorialSidebar"},"mapping/advanced/calculated/transient":{"id":"mapping/advanced/calculated/transient","title":"Complex Calculation","description":"@Transient Annotation","sidebar":"tutorialSidebar"},"mapping/advanced/embedded":{"id":"mapping/advanced/embedded","title":"Embedded Properties","description":"Embedded properties (Composite properites) merge multiple columns in the database into an integral whole, map them to a non-entity custom type, and then use this custom property to declare a property for the entity.","sidebar":"tutorialSidebar"},"mapping/advanced/enum":{"id":"mapping/advanced/enum","title":"Enum Mapping","description":"Jimmer handles enums in two ways:","sidebar":"tutorialSidebar"},"mapping/advanced/index":{"id":"mapping/advanced/index","title":"Advanced mapping","description":"In this series of articles, we will introduce advanced mappings.","sidebar":"tutorialSidebar"},"mapping/advanced/join-sql":{"id":"mapping/advanced/join-sql","title":"Non-Structural Mapping","description":"Non-Structural Design Example","sidebar":"tutorialSidebar"},"mapping/advanced/json":{"id":"mapping/advanced/json","title":"JSON Mapping","description":"Jimmer supports JSON properties. In Java/Kotlin entity types, such properties can be declared as any type other than java.lang.Object and kotlin.Any.","sidebar":"tutorialSidebar"},"mapping/advanced/key":{"id":"mapping/advanced/key","title":"Key","description":"@org.babyfish.jimmer.sql.Key is used together with Save Command in mutation section.","sidebar":"tutorialSidebar"},"mapping/advanced/logical-deleted":{"id":"mapping/advanced/logical-deleted","title":"Logical Deletion","description":"Logical deletion, also known as soft deletion, does not actually delete data from the database. Instead, it creates the illusion that data has been deleted by hiding it. This leaves room for recovery in case of misoperation.","sidebar":"tutorialSidebar"},"mapping/advanced/mapped-super-class":{"id":"mapping/advanced/mapped-super-class","title":"MappedSuperclass","description":"Basic Usage","sidebar":"tutorialSidebar"},"mapping/advanced/on-dissociate":{"id":"mapping/advanced/on-dissociate","title":"OnDissociate","description":"@org.babyfish.jimmer.sql.OnDissociate is used together with Save Command and Delete Command in mutation section.","sidebar":"tutorialSidebar"},"mapping/advanced/remote":{"id":"mapping/advanced/remote","title":"Remote Association","description":"Remote association is a product of combining Jimmer with microservice architecture. It will be introduced in detail in Spring Cloud and Remote Association.","sidebar":"tutorialSidebar"},"mapping/advanced/view/id-view":{"id":"mapping/advanced/view/id-view","title":"IdView","description":"Basic Concepts: Short Associations","sidebar":"tutorialSidebar"},"mapping/advanced/view/index":{"id":"mapping/advanced/view/index","title":"View Properites","description":"View properties do not maintain their own data, they are just another representation of another attribute (called original attribute) of their owning entity type.","sidebar":"tutorialSidebar"},"mapping/advanced/view/many-to-many-view":{"id":"mapping/advanced/view/many-to-many-view","title":"ManyToManyView","description":"Limitations of classic ORM associations","sidebar":"tutorialSidebar"},"mapping/base/association/index":{"id":"mapping/base/association/index","title":"Association Mapping","description":"Here, you will learn about the most important capability of ORM","sidebar":"tutorialSidebar"},"mapping/base/association/many-to-many":{"id":"mapping/base/association/many-to-many","title":"Many To Many","description":"This chapter introduces how to use the @org.babyfish.jimmer.sql.ManyToMany annotation to declare many-to-many association properties.","sidebar":"tutorialSidebar"},"mapping/base/association/many-to-one":{"id":"mapping/base/association/many-to-one","title":"Many To One","description":"This chapter introduces how to use the @org.babyfish.jimmer.sql.ManyToOne annotation to declare many-to-one association properties.","sidebar":"tutorialSidebar"},"mapping/base/association/one-to-many":{"id":"mapping/base/association/one-to-many","title":"One To Many","description":"Unlike JPA, Jimmer does not support unidirectional one-to-many associations. One-to-many associations can only exist as mirrors of many-to-one associations. That is, one-to-many associations necessarily imply bidirectional associations.","sidebar":"tutorialSidebar"},"mapping/base/association/one-to-one":{"id":"mapping/base/association/one-to-one","title":"One To One","description":"This chapter introduces how to use the @org.babyfish.jimmer.sql.OneToOne annotation to declare one-to-one association properties.","sidebar":"tutorialSidebar"},"mapping/base/basic":{"id":"mapping/base/basic","title":"Simple Mapping","description":"@Entity","sidebar":"tutorialSidebar"},"mapping/base/foreignkey":{"id":"mapping/base/foreignkey","title":"Real and Fake Foreign Keys","description":"Through the discussion of Association Mapping, we know that association mapping requires a lot of foreign keys.","sidebar":"tutorialSidebar"},"mapping/base/index":{"id":"mapping/base/index","title":"Base mapping","description":"In this series of articles, we will introduce base mappings.","sidebar":"tutorialSidebar"},"mapping/base/naming-strategy":{"id":"mapping/base/naming-strategy","title":"Naming Strategy","description":"Naming Strategy Interface","sidebar":"tutorialSidebar"},"mapping/base/nullity":{"id":"mapping/base/nullity","title":"Nullity","description":"Jimmer handles the issue of whether entity object properties can be null in a very strict way. Even for Java developers, it requires thinking about whether each property can be null in the same way as Kotlin developers.","sidebar":"tutorialSidebar"},"mapping/index":{"id":"mapping/index","title":"Mapping","description":"In this section, we introduce how to map a relational database to entity model.","sidebar":"tutorialSidebar"},"mutation/associations":{"id":"mutation/associations","title":"Mutable Association Table","description":"Overview","sidebar":"tutorialSidebar"},"mutation/delete-command":{"id":"mutation/delete-command","title":"Delete Command","description":"Basic Concepts","sidebar":"tutorialSidebar"},"mutation/delete-statement":{"id":"mutation/delete-statement","title":"Delete Statement","description":"Basic Usage","sidebar":"tutorialSidebar"},"mutation/draft-interceptor":{"id":"mutation/draft-interceptor","title":"Interceptor","description":"Define Intercepted Data Format","sidebar":"tutorialSidebar"},"mutation/index":{"id":"mutation/index","title":"Mutation","description":"In this section, we will introduce all the capabilities in Jimmer related to modifying the database.","sidebar":"tutorialSidebar"},"mutation/save-command/association":{"id":"mutation/save-command/association","title":"Save Associations","description":"Association Types","sidebar":"tutorialSidebar"},"mutation/save-command/dissociation":{"id":"mutation/save-command/dissociation","title":"Dissociation Operations","description":"An important concept is involved when saving associated objects: dissociation operations.","sidebar":"tutorialSidebar"},"mutation/save-command/id-checking":{"id":"mutation/save-command/id-checking","title":"Associated Id Checking","description":"Basic Concepts","sidebar":"tutorialSidebar"},"mutation/save-command/incomplete":{"id":"mutation/save-command/incomplete","title":"Incomplete Object","description":"The parameter of a save command is a dynamic object. If some of the properties are not specified, then the object is an incomplete object.","sidebar":"tutorialSidebar"},"mutation/save-command/index":{"id":"mutation/save-command/index","title":"Save Command","description":"One statement to save complex data of arbitrary shape, find DIFF to change database, like React/Vue","sidebar":"tutorialSidebar"},"mutation/save-command/input-dto/dto-lang":{"id":"mutation/save-command/input-dto/dto-lang","title":"Using DTO Language","description":"Jimmer provides DTO language.","sidebar":"tutorialSidebar"},"mutation/save-command/input-dto/index":{"id":"mutation/save-command/input-dto/index","title":"Input DTO","description":"Although the underlying save commands are very powerful, there is still some way to go before exposing data persistence APIs externally.","sidebar":"tutorialSidebar"},"mutation/save-command/input-dto/lonely":{"id":"mutation/save-command/input-dto/lonely","title":"Lonely Form","description":"This is a very crude solution, only for learning or very simple projects.","sidebar":"tutorialSidebar"},"mutation/save-command/input-dto/mapstruct":{"id":"mutation/save-command/input-dto/mapstruct","title":"Using MapStruct","description":"Not recommended for Kotlin.","sidebar":"tutorialSidebar"},"mutation/save-command/input-dto/problem":{"id":"mutation/save-command/input-dto/problem","title":"Problem","description":"In this article we discuss:","sidebar":"tutorialSidebar"},"mutation/save-command/lock":{"id":"mutation/save-command/lock","title":"Optimistic/Pessimistic Lock","description":"Save commands support both optimistic lock and pessimistic lock.","sidebar":"tutorialSidebar"},"mutation/save-command/other":{"id":"mutation/save-command/other","title":"Other Features","description":"Save Command Result","sidebar":"tutorialSidebar"},"mutation/save-command/save-mode":{"id":"mutation/save-command/save-mode","title":"Save Mode","description":"Save commands support 3 save modes that control how the aggregate root itself is saved:","sidebar":"tutorialSidebar"},"mutation/save-command/usage":{"id":"mutation/save-command/usage","title":"Basic Usage","description":"Introduction","sidebar":"tutorialSidebar"},"mutation/trigger":{"id":"mutation/trigger","title":"Trigger","description":"Jimmer supports triggers that allow users to listen for database changes.","sidebar":"tutorialSidebar"},"mutation/update-statement":{"id":"mutation/update-statement","title":"Update Statement","description":"Basic Usage","sidebar":"tutorialSidebar"},"object/draft":{"id":"object/draft","title":"Draft","description":"In previous documents we have seen that","sidebar":"tutorialSidebar"},"object/dynamic":{"id":"object/dynamic","title":"Dynamicity","description":"The example code in this article uses a type called BookDraft, which is an interface type automatically generated by Jimmer based on the user-defined type Book.","sidebar":"tutorialSidebar"},"object/immutable/current-situation":{"id":"object/immutable/current-situation","title":"Current Situation","description":"Java has supported immutable record types since Java 14, and Kotlin\'s data classes can easily implement immutable classes, even supporting copy functions. However, they are designed for simple immutable objects, and have problems dealing with complex deep data structure.","sidebar":"tutorialSidebar"},"object/immutable/index":{"id":"object/immutable/index","title":"Immutability","description":"Immutability is used to ensure that the data structure represented by Jimmer objects never contains circular references.","sidebar":"tutorialSidebar"},"object/immutable/reason":{"id":"object/immutable/reason","title":"Reason","description":"Unlike other ORMs, Jimmer uses immutable objects as entity objects.","sidebar":"tutorialSidebar"},"object/immutable/solution":{"id":"object/immutable/solution","title":"Solution","description":"The sample code above uses a type called TreeNodeDraft, which is the interface type automatically generated by Jimmer based on the user-defined type TreeNode.","sidebar":"tutorialSidebar"},"object/index":{"id":"object/index","title":"Object","description":"In this series of articles, we thoroughly discuss the dynamicity and immutability of Jimmer objects:","sidebar":"tutorialSidebar"},"object/jackson":{"id":"object/jackson","title":"Working with Jackson","description":"Jimmer objects are dynamic and not all properties of an object need to be initialized. It allows missing some properties.","sidebar":"tutorialSidebar"},"object/tool":{"id":"object/tool","title":"Tool Methods","description":"Jimmer provides a series of static tool methods for operating on dynamic objects or their Drafts.","sidebar":"tutorialSidebar"},"object/view/dto-language":{"id":"object/view/dto-language","title":"DTO Language","description":"1. Concepts","sidebar":"tutorialSidebar"},"object/view/index":{"id":"object/view/index","title":"DTO conversion","description":"When necessary, we have to convert between Jimmer dynamic objects and static DTO objects. Jimmer provides two methods for this:","sidebar":"tutorialSidebar"},"object/view/mapstruct":{"id":"object/view/mapstruct","title":"MapStruct","description":"Unless it is to be compatible with existing DTO types in legacy systems, MapStruct is not recommended. DTO Language is preferred for the following reasons:","sidebar":"tutorialSidebar"},"object/visibility":{"id":"object/visibility","title":"Visibility","description":"Previous documents have discussed in detail the dynamic and immutable properties of Jimmer entities. This introduces a new feature: visibility.","sidebar":"tutorialSidebar"},"overview/benchmark":{"id":"overview/benchmark","title":"Benchmark Report","description":"The source code for benchmarking is here, using H2 in-memory database, no environment preparation needed to run directly.","sidebar":"tutorialSidebar"},"overview/entity":{"id":"overview/entity","title":"Different Entities","description":"Style of Jimmer Entities","sidebar":"tutorialSidebar"},"overview/get-started/create-database":{"id":"overview/get-started/create-database","title":"Create Database","description":"UML","sidebar":"tutorialSidebar"},"overview/get-started/create-project":{"id":"overview/get-started/create-project","title":"Create a Project","description":"Create a Spring Boot Project","sidebar":"tutorialSidebar"},"overview/get-started/define-entity":{"id":"overview/get-started/define-entity","title":"Define Entities","description":"Unlike ORMs like JPA/Hibernate, entities in Jimmer are defined as interfaces instead of classes. The reasons are discussed in Why Interfaces.","sidebar":"tutorialSidebar"},"overview/get-started/generate-code":{"id":"overview/get-started/generate-code","title":"Generate Code","description":"Code Generation","sidebar":"tutorialSidebar"},"overview/get-started/index":{"id":"overview/get-started/index","title":"Get Started","description":"","sidebar":"tutorialSidebar"},"overview/get-started/usage":{"id":"overview/get-started/usage","title":"Final Usage","description":"Two ways to use Jimmer","sidebar":"tutorialSidebar"},"overview/index":{"id":"overview/index","title":"Introduction to Jimmer","description":"In this series of articles, we will introduce:","sidebar":"tutorialSidebar"},"overview/introduction":{"id":"overview/introduction","title":"Project Introduction","description":"Project Positioning","sidebar":"tutorialSidebar"},"overview/standard-demo":{"id":"overview/standard-demo","title":"Example(Fastest learning way)","description":"Running the examples that come with the framework is the most efficient way to get familiar with Jimmer.","sidebar":"tutorialSidebar"},"query/associations":{"id":"query/associations","title":"Querying Association Tables","description":"Association Tables Hidden by Object Model","sidebar":"tutorialSidebar"},"query/dynamic-join/chain-style":{"id":"query/dynamic-join/chain-style","title":"Association Path Chaining","description":"How Jimmer solves the dynamic join problem will be discussed in subsequent docs. This article first introduces the join style in Jimmer.","sidebar":"tutorialSidebar"},"query/dynamic-join/index":{"id":"query/dynamic-join/index","title":"Dynamic JOIN","description":"We will introduce the following contents:","sidebar":"tutorialSidebar"},"query/dynamic-join/kotlin-join":{"id":"query/dynamic-join/kotlin-join","title":"Join Features Specific to Kotlin","description":"Dilemma","sidebar":"tutorialSidebar"},"query/dynamic-join/merge":{"id":"query/dynamic-join/merge","title":"Merge Conflict Joins","description":"Usage","sidebar":"tutorialSidebar"},"query/dynamic-join/optimization":{"id":"query/dynamic-join/optimization","title":"Optimize Unnecessary Joins","description":"Usage","sidebar":"tutorialSidebar"},"query/dynamic-join/problem":{"id":"query/dynamic-join/problem","title":"Problems with Other Solutions","description":"In the previous doc, we discussed dynamic queries. In this section, we will explore the problems with dynamic table joins.","sidebar":"tutorialSidebar"},"query/dynamic-join/table-ex":{"id":"query/dynamic-join/table-ex","title":"Pagination Safety","description":"Pagination safety is a feature designed for pagination, but table join functionality provides underlying support.","sidebar":"tutorialSidebar"},"query/dynamic-join/weak-join":{"id":"query/dynamic-join/weak-join","title":"Weak Join","description":"The Problem to Solve","sidebar":"tutorialSidebar"},"query/dynamic-order":{"id":"query/dynamic-order","title":"Dynamic Ordering","description":"Static Ordering","sidebar":"tutorialSidebar"},"query/dynamic-where":{"id":"query/dynamic-where","title":"Dynamic Filtering","description":"Basic Usage","sidebar":"tutorialSidebar"},"query/expression":{"id":"query/expression","title":"DSL Expressions","description":"Literal Expressions","sidebar":"tutorialSidebar"},"query/global-filter/index":{"id":"query/global-filter/index","title":"Global Filters","description":"Global filters are used to automatically add filtering conditions for an entity type. Most queries for the entity type will automatically have related where conditions added.","sidebar":"tutorialSidebar"},"query/global-filter/logical-deleted":{"id":"query/global-filter/logical-deleted","title":"Logical Deletion","description":"Mapping","sidebar":"tutorialSidebar"},"query/global-filter/multiview-cache":{"id":"query/global-filter/multiview-cache","title":"Multi-View Cache","description":"When global filters and cache are used together, a problem called \\"multi-view cache\\" is involved.","sidebar":"tutorialSidebar"},"query/global-filter/user-filter":{"id":"query/global-filter/user-filter","title":"Custom Filters","description":"Provide Abstract Mapped Superclass","sidebar":"tutorialSidebar"},"query/group":{"id":"query/group","title":"Aggregate & Group","description":"Aggregation","sidebar":"tutorialSidebar"},"query/index":{"id":"query/index","title":"Query","description":"In this section, we will introduce the various queries in Jimmer without considering Cache.","sidebar":"tutorialSidebar"},"query/native-sql":{"id":"query/native-sql","title":"Native SQL Expressions","description":"Native SQL expressions are an important feature to leverage database-specific capabilities, as database products always have proprietary features.","sidebar":"tutorialSidebar"},"query/object-fetcher/association":{"id":"query/object-fetcher/association","title":"Associations","description":"In last doc we introduced scalar property fetching. In this doc we discuss association fetching.","sidebar":"tutorialSidebar"},"query/object-fetcher/dto":{"id":"query/object-fetcher/dto","title":"Querying DTOs","description":"Previously we introduced using object fetchers to flexibly control the shape of queried data structures.","sidebar":"tutorialSidebar"},"query/object-fetcher/index":{"id":"query/object-fetcher/index","title":"Object Fetcher","description":"Concept","sidebar":"tutorialSidebar"},"query/object-fetcher/props":{"id":"query/object-fetcher/props","title":"Ordinary Properties","description":"Fetching Scalar Fields","sidebar":"tutorialSidebar"},"query/object-fetcher/recursive":{"id":"query/object-fetcher/recursive","title":"Recursive Query","description":"A common requirement is to handle self-associated property.","sidebar":"tutorialSidebar"},"query/object-fetcher/spring-data":{"id":"query/object-fetcher/spring-data","title":"Working with Spring Data","description":"We have introduced that object fetchers can flexibly control the shape of queried data structures, bringing tremendous flexibility for application development.","sidebar":"tutorialSidebar"},"query/object-fetcher/usage":{"id":"query/object-fetcher/usage","title":"Basic Usage","description":"Why Introduce Object Fetchers","sidebar":"tutorialSidebar"},"query/object-fetcher/view":{"id":"query/object-fetcher/view","title":"View Properties","description":"IdView","sidebar":"tutorialSidebar"},"query/paging/deep-optimization":{"id":"query/paging/deep-optimization","title":"Deep Pagination Optimization","description":"Pagination queries have a problem - when the data volume is large, if the pagination range is too far back (i.e. offset is too large), performance issues can occur.","sidebar":"tutorialSidebar"},"query/paging/index":{"id":"query/paging/index","title":"Smart Paging","description":"Here is the English translation:","sidebar":"tutorialSidebar"},"query/paging/reverse-sorting":{"id":"query/paging/reverse-sorting","title":"Reverse Sorting Optimization","description":"Concept","sidebar":"tutorialSidebar"},"query/paging/unncessary-join":{"id":"query/paging/unncessary-join","title":"Table Join Optimization","description":"In the previous article, we mentioned that Jimmer can not only auto-generate count-query from data-query, but also auto-optimize the count-query.","sidebar":"tutorialSidebar"},"query/paging/usage":{"id":"query/paging/usage","title":"Usage","description":"Features of Jimmer Pagination","sidebar":"tutorialSidebar"},"query/qbe":{"id":"query/qbe","title":"Query By Example","description":"TODO","sidebar":"tutorialSidebar"},"query/sub-query":{"id":"query/sub-query","title":"Subqueries","description":"Typed Subqueries","sidebar":"tutorialSidebar"},"query/usage":{"id":"query/usage","title":"Overview","description":"Select-After Style","sidebar":"tutorialSidebar"},"resource/discuss":{"id":"resource/discuss","title":"Discuss","description":"TODO","sidebar":"tutorialSidebar"},"resource/ecosystem":{"id":"resource/ecosystem","title":"Ecosystem","description":"Jimmer focuses only on the ORM itself and does not provide auxiliary tools, such as generating entity interface definitions based on the database structure.","sidebar":"tutorialSidebar"},"resource/index":{"id":"resource/index","title":"Resources","description":"","sidebar":"tutorialSidebar"},"resource/vedio":{"id":"resource/vedio","title":"Vedio","description":"TODO","sidebar":"tutorialSidebar"},"resource/vice-of-sccuessed":{"id":"resource/vice-of-sccuessed","title":"Voice of Successful Cases","description":"<Feedback items={[","sidebar":"tutorialSidebar"},"spring/appendix":{"id":"spring/appendix","title":"Appendix","description":"Jimmer has many configurations, some of which can be configured in Spring Boot\'s application.yml or application.properties. Such as:","sidebar":"tutorialSidebar"},"spring/client/api":{"id":"spring/client/api","title":"Generate Client API","description":"Basic Concepts","sidebar":"tutorialSidebar"},"spring/client/error":{"id":"spring/client/error","title":"Generate Client Errors","description":"This part is actually unrelated to ORM.","sidebar":"tutorialSidebar"},"spring/client/index":{"id":"spring/client/index","title":"Generate Client Code","description":"In this series of articles, we will introduce generating client code.","sidebar":"tutorialSidebar"},"spring/index":{"id":"spring/index","title":"Spring","description":"Jimmer itself is highly neutral and does not couple with any container framework, but can easily integrate with any container framework.","sidebar":"tutorialSidebar"},"spring/repository/abstract":{"id":"spring/repository/abstract","title":"Simple Queries","description":"Just like other Spring Data implementations, users can define abstract methods in the Repository interface. As long as the names, parameters and return values of these methods follow conventions, Jimmer implements them automatically. For example:","sidebar":"tutorialSidebar"},"spring/repository/concept":{"id":"spring/repository/concept","title":"Define Repository","description":"Jimmer integrates spring data and provides a base repository interface for Java and Kotlin users respectively.","sidebar":"tutorialSidebar"},"spring/repository/default":{"id":"spring/repository/default","title":"Complex Queries","description":"In the previous document, we introduced adding abstract methods to custom Repository interfaces following certain conventions, which are implemented automatically by Jimmer.","sidebar":"tutorialSidebar"},"spring/repository/dto":{"id":"spring/repository/dto","title":"Query DTO","description":"Jimmer provides DTO language.","sidebar":"tutorialSidebar"},"spring/repository/index":{"id":"spring/repository/index","title":"Spring Data","description":"Jimmer provides Spring Data Repository style APIs, so you can:","sidebar":"tutorialSidebar"},"spring/spring-cloud":{"id":"spring/spring-cloud","title":"Remote Associations","description":"Remote associations are Jimmer\'s first thoughts on microservice architecture.","sidebar":"tutorialSidebar"},"spring/transaction":{"id":"spring/transaction","title":"Spring Transaction","description":"Integrate Spring Transaction","sidebar":"tutorialSidebar"}}}')}}]);